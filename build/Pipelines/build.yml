name: 1.0$(Rev:.r)

pool:
  vmImage: 'windows-latest'

trigger:
  batch: true
  paths:
    exclude:
    - build
        
variables:
- name: BuildPlatform
  value: 'Any CPU'
- name: BuildConfiguration
  value: 'NuGetRelease'

steps:
- task: PowerShell@2
  displayName: 'Set NuGet Package Version Number'
  inputs:
    filePath: 'build/Scripts/SetNuGetPackageVersion.ps1'
    arguments: '-branch "$(Build.SourceBranch)" -buildNumber "$(Build.BuildNumber)"'

- template: 'Template_Build.yml'
  parameters:
    solutions: '**\\*.sln'

- task: DotNetCoreCLI@2
  displayName: 'Pack NuGet'
  condition: and(succeeded(), eq(variables.CreateNuGetPackage, 'true'))
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)\src\Vermaat.PowerPlatform.Management\Vermaat.PowerPlatform.Management.csproj'
    nobuild: true
    includesymbols: true
    includesource: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'NuGetVersion'


- task: NuGetCommand@2
  displayName: 'NuGet push'
  condition: and(succeeded(), eq(variables.CreateNuGetPackage, 'true'))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet - MVermaat'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: CI
